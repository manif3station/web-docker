#!/usr/bin/perl

use strict;
use warnings;
use Cwd 'cwd';
use File::Find;

use FindBin '$Bin';

chdir "$Bin/..";

my $order = 1;

mkdir '.enabled' if !-d '.enabled';

my %enabled;

find sub { $enabled{$_} = $order++ } => '.enabled';

$enabled{'base.yml'} = 0;

my %features;

find sub {
    my $name = $_;
    my $path = $File::Find::name;
    find sub {
        my $name = $_;
        my $path = $File::Find::name;
        $features{$name} = $path if -f $path && $name =~ m/\.(yml|yaml)$/;
    } => $path if -d $path && $name eq 'docker-compose';
} => cwd;

if ( grep { /--enable/ } @ARGV ) {
    my ( undef, $service ) = @ARGV;
    $service .= '.yml' if $service !~ m/yml$/;
    die "Unknown services '$service'\n"
      if !$features{$service};
    exec touch => ".enabled/$service";
}

if ( grep { /--disable/ } @ARGV ) {
    my ( undef, $service ) = @ARGV;
    $service .= '.yml' if $service !~ m/yml$/;
    unlink ".enabled/$service";
    exit;
}

if ( grep { /--list/ } @ARGV ) {
    printf "%s\n", join "\n",
      sort map { ( exists $enabled{$_} ? '[+]' : '[-]' ) . " $_" }
      keys %features;
    exit;
}

my @enabled = map { -f => $features{$_} }
  sort { $enabled{$a} <=> $enabled{$b} }
  grep { exists $enabled{$_} } keys %features;

if (join(' ', @ARGV) !~ m/(?:-p|--project-name) \S+/) {
    push @enabled, '--project-name' => (cwd =~ m{.*\/(.*)});
}

my @cmd = ( 'docker-compose', @enabled, @ARGV );

printf ">>> %s\n", join ' ', @cmd if $ENV{VERBOSE};

exec @cmd;
